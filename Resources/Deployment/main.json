{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "keyVaultName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Azure Key Vault."
      }
    },
    "sqlServerName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Azure SQL Server."
      }
    },
    "sqlDatabaseName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Azure SQL Database."
      }
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Azure Storage."
      }
    },
    "appServicePlanName": {
      "type": "string",
      "metadata": {
        "description": "Name of the App Service Plan."
      }
    },
    "isvWebAppName": {
      "type": "string",
      "metadata": {
        "description": "Name of the ISV web app."
      }
    },
    "enduserWebAppName": {
      "type": "string",
      "metadata": {
        "description": "Name of the End user web app."
      }
    },
    "apiWebAppName": {
      "type": "string",
      "metadata": {
        "description": "Name of the API web app."
      }
    },
    "apiWebAppInsightsName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Application Insight for API web app."
      }
    },
    "buildLocation": {
      "type": "string",
      "defaultValue": "https://github.com/Azure/AIPlatform/raw/master/end-to-end-solutions/Luna/Resources/Builds/latest",
      "metadata": {
        "description": "The build location for deployment files."
      }
    },
    "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
    },
    "sqlAdministratorLoginPassword": {
      "type": "string",
      "metadata": {
        "description": "The SQL Server admin password."
      }
    },
    "sqlAdministratorUsername": {
      "type": "string",
      "defaultValue": "cloudsa",
      "metadata": {
        "description": "The SQL Server admin username."
      }
    },
    "tenantId": {
      "type": "string",
      "metadata": {
        "description": "The tenant id."
      }
    },
    "objectId": {
      "type": "string",
      "metadata": {
        "description": "The object id for key vault access policy."
      }
    }
  },
  "variables": {
    "databaseCollation": "SQL_Latin1_General_CP1_CI_AS",
    "databaseEdition": "Standard",
    "databaseServiceObjectiveName": "S3"
  },
  "resources": [
    { "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-04-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_GRS",
        "tier": "Standard"
      },
      "kind": "Storage",
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": false,
        "encryption": {
          "services": {
            "file": {
              "enabled": true
            },
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        }
      }
    },
    { "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2016-09-01",
      "name": "[parameters('appServicePlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "B2",
        "tier": "Basic",
        "size": "B2",
        "family": "B",
        "capacity": 1
      },
      "kind": "app",
      "properties": {
        "name": "[parameters('appServicePlanName')]",
        "perSiteScaling": false,
        "reserved": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0
      }
    },
    { "type": "Microsoft.Web/sites",
      "apiVersion": "2016-08-01",
      "name": "[parameters('apiWebAppName')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
      ],
      "kind": "app",
      "properties": {
        "enabled": true,
        "reserved": false,
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": true,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
		"siteConfig": {
                    "appSettings": [
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(concat('microsoft.insights/components/', parameters('apiWebAppInsightsName')), '2015-05-01').InstrumentationKey]"
                        },
                        {
                            "name": "ApplicationInsightsAgent_EXTENSION_VERSION",
                            "value": "~2"
                        },
                        {
                            "name": "XDT_MicrosoftApplicationInsights_Mode",
                            "value": "default"
                        },
                        {
                            "name": "DiagnosticServices_EXTENSION_VERSION",
                            "value": "disabled"
                        },
                        {
                            "name": "APPINSIGHTS_PROFILERFEATURE_VERSION",
                            "value": "disabled"
                        },
                        {
                            "name": "APPINSIGHTS_SNAPSHOTFEATURE_VERSION",
                            "value": "disabled"
                        },
                        {
                            "name": "InstrumentationEngine_EXTENSION_VERSION",
                            "value": "disabled"
                        },
                        {
                            "name": "SnapshotDebugger_EXTENSION_VERSION",
                            "value": "disabled"
                        },
                        {
                            "name": "XDT_MicrosoftApplicationInsights_BaseExtensions",
                            "value": "disabled"
                        },
                        {
                            "name": "ANCM_ADDITIONAL_ERROR_PAGE_LINK",
                            "value": "[concat('https://', parameters('apiWebAppName'), '.scm.azurewebsites.net/detectors')]"
                        }
                    ],
                    "metadata": [
                        {
                            "name": "CURRENT_STACK",
                            "value": "dotnetcore"
                        }
                    ],
                    "alwaysOn": "true"
                }
      },
      "resources": [
        {
            "type": "siteextensions",
            "name": "Microsoft.AspNetCore.AzureAppServices.SiteExtension",
            "apiVersion": "2015-04-01",
            "location": "[parameters('location')]",
            "properties": {
                "version": "3.0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/Sites', parameters('apiWebAppName'))]"
            ]
        },
        {
          "name": "MSDeploy",
          "type": "Extensions",
          "apiVersion": "2015-02-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', parameters('apiWebAppName'))]"
          ],
          "properties": {
            "packageUri": "[concat(parameters('buildLocation'), '/apiApp.zip?raw=true')]"
          }
        }
      ]
    },
    {
      "type": "microsoft.insights/components",
      "name": "[parameters('apiWebAppInsightsName')]",
      "apiVersion": "2015-05-01",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": { "ApplicationId": "[parameters('apiWebAppInsightsName')]",
                "Request_Source": "IbizaWebAppExtensionCreate"
				}
    },
    { "type": "Microsoft.Web/sites",
      "apiVersion": "2016-08-01",
      "name": "[parameters('isvWebAppName')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
      ],
      "kind": "app",
      "properties": {
        "enabled": true,
        "reserved": false,
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": true,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
      },
      "resources": [
        {
          "name": "MSDeploy",
          "type": "Extensions",
          "apiVersion": "2015-02-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', parameters('isvWebAppName'))]"
          ],
          "properties": {
            "packageUri": "[concat(parameters('buildLocation'), '/isvApp.zip?raw=true')]"
          }
        }
      ]
    },
    { "type": "Microsoft.Web/sites",
      "apiVersion": "2016-08-01",
      "name": "[parameters('enduserWebAppName')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
      ],
      "kind": "app",
      "properties": {
        "enabled": true,
        "reserved": false,
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": true,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
      },
      "resources": [
        {
          "name": "MSDeploy",
          "type": "Extensions",
          "apiVersion": "2015-02-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', parameters('enduserWebAppName'))]"
          ],
          "properties": {
            "packageUri": "[concat(parameters('buildLocation'), '/userApp.zip?raw=true')]"
          }
        }
      ]
    },
    { "name": "[parameters('sqlServerName')]",
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2015-01-01",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "SqlServer"
      },
      "properties": {
        "administratorLogin": "[parameters('sqlAdministratorUsername')]",
        "administratorLoginPassword": "[parameters('sqlAdministratorLoginPassword')]",
        "version": "12.0"
      },
      "resources": [
        {
          "name": "[parameters('sqlDatabaseName')]",
          "type": "databases",
          "apiVersion": "2015-01-01",
          "location": "[parameters('location')]",
          "tags": {
            "displayName": "Database"
          },
          "properties": {
            "edition": "[variables('databaseEdition')]",
            "collation": "[variables('databaseCollation')]",
            "requestedServiceObjectiveName": "[variables('databaseServiceObjectiveName')]"
          },
          "dependsOn": [
            "[parameters('sqlServerName')]"
          ],
          "resources": [
            {
              "comments": "Transparent Data Encryption",
              "name": "current",
              "type": "transparentDataEncryption",
              "apiVersion": "2015-01-01",
              "properties": {
                "status": "Enabled"
              },
              "dependsOn": [
                "[parameters('sqlDatabaseName')]"
              ]
            }
          ]
        },
        {
          "name": "AllowAllMicrosoftAzureIps",
          "type": "firewallrules",
          "apiVersion": "2014-04-01",
          "location": "[parameters('location')]",
          "properties": {
            "endIpAddress": "0.0.0.0",
            "startIpAddress": "0.0.0.0"
          },
          "dependsOn": [
            "[parameters('sqlServerName')]"
          ]
        }
      ]
    },
    { "type": "Microsoft.KeyVault/vaults",
        "apiVersion": "2016-10-01",
        "name": "[parameters('keyVaultName')]",
        "location": "[parameters('location')]",
        "properties": {
            "sku": {
                "family": "A",
                "name": "standard"
            },
            "tenantId": "[parameters('tenantId')]",
            "accessPolicies": [
                {
                    "tenantId": "[parameters('tenantId')]",
                    "objectId": "[parameters('objectId')]",
                    "permissions": {
                        "keys": [
                            "get",
                            "create",
                            "delete",
                            "list",
                            "update",
                            "import",
                            "backup",
                            "restore",
                            "recover"
                        ],
                        "secrets": [
                            "get",
                            "list",
                            "set",
                            "delete",
                            "backup",
                            "restore",
                            "recover"
                        ],
                        "certificates": [
                            "get",
                            "delete",
                            "list",
                            "create",
                            "import",
                            "update",
                            "deleteissuers",
                            "getissuers",
                            "listissuers",
                            "managecontacts",
                            "manageissuers",
                            "setissuers",
                            "recover",
                            "backup",
                            "restore"
                        ],
                        "storage": [
                            "delete",
                            "deletesas",
                            "get",
                            "getsas",
                            "list",
                            "listsas",
                            "regeneratekey",
                            "set",
                            "setsas",
                            "update",
                            "recover",
                            "backup",
                            "restore"
                        ]
                    }
                }
            ],
            "enabledForDeployment": false,
            "enabledForDiskEncryption": false,
            "enabledForTemplateDeployment": false
        }
    }
  ],
  "outputs": {
  }
}